{
  "src/lib/components/PythonEditor.react.js": {
    "description": "PythonEditor is a Python code editor comopnent.\r\nallowing for highlighting code in textarea component.",
    "displayName": "PythonEditor",
    "methods": [],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID of this component, used to identify dash components\r\nin callbacks. The ID needs to be unique across all of the\r\ncomponents in an app."
      },
      "value": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The value of the textarea.",
        "defaultValue": {
          "value": "\"\"",
          "computed": false
        }
      },
      "tabSize": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "TabSize of PythonEditor.",
        "defaultValue": {
          "value": "4",
          "computed": false
        }
      },
      "insertSpaces": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Determines whether to insert spaces.",
        "defaultValue": {
          "value": "true",
          "computed": false
        }
      },
      "ignoreTabKey": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Determines whether to ignore tab key.",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "padding": {
        "type": {
          "name": "union",
          "value": [
            {
              "name": "string"
            },
            {
              "name": "number"
            }
          ]
        },
        "required": false,
        "description": "Padding of PythonEditor container.",
        "defaultValue": {
          "value": "10",
          "computed": false
        }
      },
      "autoFocus": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The element should be automatically focused after the page loaded."
      },
      "disabled": {
        "type": {
          "name": "union",
          "value": [
            {
              "name": "string"
            },
            {
              "name": "bool"
            }
          ]
        },
        "required": false,
        "description": "Indicates whether the user can interact with the element."
      },
      "form": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Indicates the form that is the owner of the element."
      },
      "name": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Name of the element. For example used by the server to identify the fields in form submits."
      },
      "placeholder": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Provides a hint to the user of what can be entered in the field.",
        "defaultValue": {
          "value": "\"Type some code here...\"",
          "computed": false
        }
      },
      "readOnly": {
        "type": {
          "name": "union",
          "value": [
            {
              "name": "bool"
            },
            {
              "name": "enum",
              "value": [
                {
                  "value": "'readOnly'",
                  "computed": false
                },
                {
                  "value": "'readonly'",
                  "computed": false
                },
                {
                  "value": "'READONLY'",
                  "computed": false
                }
              ]
            }
          ]
        },
        "required": false,
        "description": "Indicates whether the element can be edited.\r\nreadOnly is an HTML boolean attribute - it is enabled by a boolean or\r\n'readOnly'. Alternative capitalizations `readonly` & `READONLY`\r\nare also acccepted."
      },
      "required": {
        "type": {
          "name": "union",
          "value": [
            {
              "name": "enum",
              "value": [
                {
                  "value": "'required'",
                  "computed": false
                },
                {
                  "value": "'REQUIRED'",
                  "computed": false
                }
              ]
            },
            {
              "name": "bool"
            }
          ]
        },
        "required": false,
        "description": "Indicates whether this element is required to fill out or not.\r\nrequired is an HTML boolean attribute - it is enabled by a boolean or\r\n'required'. Alternative capitalizations `REQUIRED`\r\nare also acccepted."
      },
      "className": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Often used with CSS to style elements with common properties."
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Defines CSS styles which will override styles previously set."
      },
      "loading_state": {
        "type": {
          "name": "shape",
          "value": {
            "is_loading": {
              "name": "bool",
              "description": "Determines if the component is loading or not",
              "required": false
            },
            "prop_name": {
              "name": "string",
              "description": "Holds which property is loading",
              "required": false
            },
            "component_name": {
              "name": "string",
              "description": "Holds the name of the component that is loading",
              "required": false
            }
          }
        },
        "required": false,
        "description": "Object that holds the loading state object coming from dash-renderer"
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that gets fired when the value changes."
      }
    }
  }
}